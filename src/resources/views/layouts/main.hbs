<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Prevent COVID-19</title>

    <!-- Favicons -->
    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Google Fonts -->
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Roboto:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
        rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/icofont/icofont.min.css" rel="stylesheet">
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/vendor/animate.css/animate.min.css" rel="stylesheet">
    <link href="/assets/vendor/owl.carousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/vendor/venobox/venobox.css" rel="stylesheet">
    <link href="/assets/vendor/aos/aos.css" rel="stylesheet">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <script src="https://kit.fontawesome.com/dfde2a1539.js" crossorigin="anonymous"></script>
     <script src="https://www.gstatic.com/firebasejs/8.2.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.0/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.0/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.0/firebase-messaging.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.0/firebase.js"></script>


    <script>
        window.fbAsyncInit = function () {
            FB.init({
                appId: '382074626200203',
                xfbml: true,
                version: 'v9.0'
            });
            FB.AppEvents.logPageView();
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
     <script>
         if ('serviceWorker' in navigator) {
            // Register service worker
            navigator.serviceWorker.register('service-worker.js').then(function (reg) {
                console.log("SW registration succeeded. Scope is " + reg.scope);
            }).catch(function (err) {
                console.log(navigator.serviceWorker);
                console.error("SW registration failed with error " + err);
                
            });
        }
        
        // Initialize Firebase
        firebase.initializeApp({
    apiKey: "AIzaSyDnVnFbA4U03jm8e-s-S_XxgV_fUfE9uhM",
    authDomain: "preventcovid19-fb9a0.firebaseapp.com",
    databaseURL: "https://preventcovid19-fb9a0.firebaseio.com",
    projectId: "preventcovid19-fb9a0",
    storageBucket: "preventcovid19-fb9a0.appspot.com",
    messagingSenderId: "821703464030",
    appId: "1:821703464030:web:e904f0c2450d39fe3810cf",
    measurementId: "G-YJR7SL8YDT"
});
       
    </script>
 <link rel="manifest" href="manifest.json">



</head>

<body>
    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous"
        src="https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v9.0&appId=382074626200203&autoLogAppEvents=1"
        nonce="YSHXQ4pA"></script>
    <!--Link header.hbs-->
    {{> header}}

    <div class="container">
        {{{body}}}

    </div>


    <!--Link footer.hbs-->
    {{> footer}}
       <div class="row style">
        <div class="input-field col s8">
            <h5>Token ID:</h5>
            <div id="divToken" style="display: none;"></div>

            <p id="token" style="word-break: break-all;"></p>
            <button class="btn waves-effect waves-light" onclick="deleteToken()">Reset Token</button>
        </div>
    </div>
    <div class="row style">
        <div class="input-field col s12">
            <div id="permission_div" style="display: none;">
                <h4>Requires Permission</h4>
                <p id="token"></p>
                <button class="btn waves-effect waves-light" onclick="requestPermission()">
                    Request Permission
                </button>
            </div>
        </div>
    </div>

    <!-- Display Incoming notifications -->

    <div class="row style">
        <div class="input-field col s12">
            <div id="messages"></div>
        </div>
    </div>

    <!-- CHATBOT section -->
    <script SameSite="None; Secure" src="https://static.landbot.io/landbot-3/landbot-3.0.0.js"></script>
    <script>
        var myLandbot = new Landbot.Livechat({
            configUrl: 'https://chats.landbot.io/v3/H-778100-57II9WEYQAOFF3HC/index.json',
        });
    </script>

    <!-- End CHATBOT section -->


    <div id="preloader"></div>
    <a href="#" class="back-to-top"><i class="icofont-simple-up"></i></a>

    <!-- Vendor JS Files -->

    <script src='https://kit.fontawesome.com/a076d05399.js'></script>
    <script src="/assets/vendor/jquery/jquery.min.js"></script>
    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/jquery.easing/jquery.easing.min.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
    <script src="/assets/vendor/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/vendor/counterup/counterup.min.js"></script>
    <script src="/assets/vendor/owl.carousel/owl.carousel.min.js"></script>
    <script src="/assets/vendor/venobox/venobox.min.js"></script>
    <script src="/assets/vendor/aos/aos.js"></script>
    <script type="text/javascript">

        //Initialise firebase messaging
          
        const messaging = firebase.messaging();
        const tokenDivId = 'divToken';
        const permissionDivId = 'permission_div';


        messaging.onTokenRefresh(function () {
            messaging.getToken()
                .then(function (refreshedToken) {
                    console.log('Token refreshed.');

                    setTokenSentToServer(false);
                    // Send Token ID token to server.
                    sendTokenToServer(refreshedToken);


                    // Display new Token ID token.
                    resetUserInterface();

                })
                .catch(function (err) {
                    console.log('Unable to retrieve refreshed token ', err);
                    showToken('Unable to retrieve refreshed token ', err);
                });
        });
        messaging.onMessage(function (payload) {
            appendMessage(payload);
        });
        function resetUserInterface() {
            clearMessages();
            showToken('Loading the token...');
            messaging.getToken()
                .then(function (currentToken) {
                    if (currentToken) {
                        sendTokenToServer(currentToken);
                        updateUIForPushEnabled(currentToken);
                    } else {
                        console.log('Request permission to generate Token.');
                        updateUIForPushPermissionRequired();
                        setTokenSentToServer(false);
                    }
                })
                .catch(function (err) {
                    console.log('Error occurred while retrieving token. ', err);
                    showToken('Error retrieving Instance ID token. ', err);
                    setTokenSentToServer(false);
                });
        }
        function showToken(currentToken) {
            var tokenElement = document.querySelector('#token');
            tokenElement.textContent = currentToken;
        }
        function sendTokenToServer(currentToken) {
            if (!isTokenSentToServer()) {
                console.log('Sending token to the server...');
                setTokenSentToServer(true);
            } else {
                const dbb=firebase.firestore(); 
                 dbb.collection('token-push').doc().set({
                                date: new Date(),
                                token:currentToken
                                }); 
                console.log('Token sent to server!');
            }
        }
        function isTokenSentToServer() {
            if (window.localStorage.getItem('sentToServer') == 1) {
                return true;
            }
            return false;
        }
        function setTokenSentToServer(sent) {
            window.localStorage.setItem('sentToServer', sent ? 1 : 0);
        }
        function showHideDiv(divId, show) {
            const div = document.querySelector('#' + divId);
            if (show) {
                div.style = "display: visible";
            } else {
                div.style = "display: none";
            }
        }
        function requestPermission() {
            console.log('Requesting permission...');
            messaging.requestPermission()
                .then(function () {
                    console.log('Notification permission granted.');
                    resetUserInterface();
                })
                .catch(function (err) {
                    console.log('Unable to get permission for notification.', err);
                });
        }

        function deleteToken() {
            messaging.getToken()
                .then(function (currentToken) {
                    messaging.deleteToken(currentToken)
                        .then(function () {
                            console.log('Token deleted.');
                            
                            setTokenSentToServer(false);
                            resetUserInterface();
                        })
                        .catch(function (err) {
                            console.log('Unable to delete token. ', err);
                        });
                })
                .catch(function (err) {
                    console.log('Error retrieving token. ', err);
                    showToken('Error retrieving token. ', err);
                });
        }
        // Add a message to the messages element.
        function appendMessage(payload) {
            const messagesElement = document.querySelector('#messages');
            const dataHeaderELement = document.createElement('h5');
            const dataElement = document.createElement('pre');
            dataElement.style = 'overflow-x:hidden;'
            dataHeaderELement.textContent = 'Notification Received:';
            dataElement.textContent = JSON.stringify(payload, null, 2);
            messagesElement.appendChild(dataHeaderELement);
            messagesElement.appendChild(dataElement);
        }
        // Clear the messages element of all children.
        function clearMessages() {
            const messagesElement = document.querySelector('#messages');
            while (messagesElement.hasChildNodes()) {
                messagesElement.removeChild(messagesElement.lastChild);
            }
        }
        function updateUIForPushEnabled(currentToken) {
            showHideDiv(tokenDivId, true);
            showHideDiv(permissionDivId, false);
            showToken(currentToken);
        }
        function updateUIForPushPermissionRequired() {
            showHideDiv(tokenDivId, false);
            showHideDiv(permissionDivId, true);
        }
        resetUserInterface();

    </script>

    <!-- Template Main JS File -->
    <script src="/assets/js/main.js"></script>
    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v8.0"
        nonce="VMlYH1qh"></script>
        



    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


</body>

</html>